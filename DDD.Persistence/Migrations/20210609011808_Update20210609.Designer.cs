// <auto-generated />
using System;
using DDD.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDD.Persistence.Migrations
{
    [DbContext(typeof(NigelDbContext))]
    [Migration("20210609011808_Update20210609")]
    partial class Update20210609
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasComment("添加日期");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_At")
                        .HasComment("删除日期");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("数据状态（1、正常 2、不显示 3、已删除）");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_At")
                        .HasComment("最后修改日期");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserInfoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasComment("添加日期");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_At")
                        .HasComment("删除日期");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("数据状态（1、正常 2、不显示 3、已删除）");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("Updated_At")
                        .HasComment("最后修改日期");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AdminUserInfo");
                });

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserLoginRecordEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AdminUserLoginRecord");
                });

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserInfoEntity", b =>
                {
                    b.HasOne("DDD.Domain.Core.Entities.AdminUserEntity", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("DDD.Domain.Core.Entities.AdminUserInfoEntity", "UserId")
                        .HasConstraintName("FK_AdminUser_AdminUserInfo")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserLoginRecordEntity", b =>
                {
                    b.HasOne("DDD.Domain.Core.Entities.AdminUserEntity", "User")
                        .WithMany("LoginRecords")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_AdminUser_AdminUserLoginRecord")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DDD.Domain.Core.Entities.AdminUserEntity", b =>
                {
                    b.Navigation("LoginRecords");

                    b.Navigation("UserInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
